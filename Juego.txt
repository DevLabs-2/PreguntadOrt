public static class Juego
{
    private string _nombre;
    private int _puntajeActual;
    private int _cantPreguntasCorrectas;
    private List<Preguntas> _preguntas;
    private List<Respuestas> _respuestas;
    private int i;
 
    public static void InicializarJuego()
    {
        i = 0;
        _nombre = "";
        _puntajeActual = 0;
        cantPreguntasCorrectas = 0;
        _preguntas = new List<Preguntas>();
        _respuestas = new List<Respuestas>();
    }
    public static List<Categorias> ObtenerCategorias()
    {
        return BD.ObtenerCategorias();
    }
    public static List<Dificultades> ObtenerDificultades()
    {
        return BD.ObtenerDificultades();
    }
    public static void CargarPartida(string nombre, int dificultad, int categoria)
    {
        _preguntas = Randomizer(BD.ObtenerPreguntas(dificultad, categoria));
        _respuestas = BD.ObtenerRespuestas(_preguntas);
    }
    public static Preguntas ObtenerProximaPregunta()
    {
        return _preguntas[i];
        i++;
    }
    public static List<Preguntas> Randomizer(List<Preguntas> Lista)
    {
        int n = Lista.Count;  
        while (n > 1) {  
            n--;
            int k = rng.Next(n + 1);
            Preguntas pregunta = Lista[k];
            Lista[k] = Lista[n];
            Lista[n] = pregunta;
        } 
    }
    public static List<Respuestas> ObtenerProximasRespuestas(int idPregunta)
    {
        new List<Respuestas>() ListaCorrectas;
        foreach(Respuestas respuesta in _respuestas)
        {
            if(respuesta.idPregunta == idPregunta)
            {
                ListaCorrectas.AddRange(respuesta);
            }
        }
        return ListaCorrectas;
    }
    public static bool ValidarRespuesta(int idPregunta, int idRespuesta)
    {
        Preguntas pregunta == new Preguntas;
        foreach(Preguntas preg in _preguntas)
        {
            if(preg.idPregunta == idPregunta) pregunta = preg;
        }
        EliminarPregunta(preg.idPregunta);
        Respuestas respuesta == new Respuestas;
        foreach(Respuestas res in _respuestas)
        {
            if(res.idRespuesta == idRespuesta) respuesta = res;
        }
        if(res.correcta)
        {
            _puntajeActual += 100;
            _cantPreguntasCorrectas++;
        }
        return res.correcta;
    }
    public static void EliminarPregunta(int idPregunta)
    {
        int i = 0;
        foreach(Preguntas preg in _preguntas)
        {
            if(preg.idPregunta == idPregunta) _preguntas.Remove(i);
            i++;
        }
    }
}
